plugins {
    id 'java'
    id 'java-library'
}

group = 'net.rms.xrain.velocityass'
version = file('plugin.version').text.trim().substring(1)  // 去除V前缀
sourceCompatibility = '17'

repositories {
    // RMS Velocity API
    flatDir {
        dirs 'api'
    }

    
    maven {
        name = 'huawei-maven'  
        url = 'https://repo.huaweicloud.com/repository/maven/'
    }
    
    
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
}

dependencies {
    // RMS Velocity API
    compileOnly files('api/velocity-api-3.1.1-SNAPSHOT-all.jar')
    annotationProcessor files('api/velocity-api-3.1.1-SNAPSHOT-all.jar')
    
    implementation 'org.yaml:snakeyaml:2.0'
    
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

compileJava {
    options.encoding = 'UTF-8'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'net.rms.xrain.velocityass.AutoSelectServer'
    }
}


task updatePluginJson {
    doLast {
        def pluginJsonFile = file('src/main/resources/velocity-plugin.json')
        def pluginJson = new groovy.json.JsonSlurper().parse(pluginJsonFile)
        pluginJson.version = version
        
        def jsonOutput = new groovy.json.JsonBuilder(pluginJson)
        pluginJsonFile.text = groovy.json.JsonOutput.prettyPrint(jsonOutput.toString())
    }
}


task updateJavaVersion {
    doLast {
        def javaFile = file('src/main/java/net/rms/xrain/velocityass/AutoSelectServer.java')
        def content = javaFile.text
        content = content.replaceAll(/version = "[\d\.]+",/, "version = \"${version}\",")
        javaFile.text = content
    }
}


compileJava.dependsOn updatePluginJson, updateJavaVersion